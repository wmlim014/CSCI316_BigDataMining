# -*- coding: utf-8 -*-
"""Lab3_knn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WP-MF9kEkmif1b-O87KOiWHL8BbMxerL
"""

from numpy import *
def classify0(inX, dataSet, labels, k):
    dataSetSize = dataSet.shape[0]
    diffMat = tile(inX, (dataSetSize, 1)) - dataSet
    sqDiffMat = diffMat ** 2        # square
    sqDistances = sqDiffMat.sum(axis=1)
    distances = sqDistances ** 0.5  #square root
    sortedDistIndicies = distances.argsort()
    classCount = {}
    for i in range(k):
        voteIlabel = labels[sortedDistIndicies[i]]
        classCount[voteIlabel] = \
                               classCount.get(voteIlabel, 0) + 1
        sortedClassCount = sorted(classCount.items(),
                                  key=lambda x: x[1],
                                  reverse = True)
        return sortedClassCount[0][0]

group = array([[1.0, 1.1], [1.0, 1.0], [0, 0], [0, 0.1]])
labels = ['A', 'A', 'B', 'B']
# predit the class of a record [0, 0] based on
# its 3-nearest neighbours in group
# (whose labels are known)
classify0([0.1, 0], group, labels, 3)

def main():
    import numpy as np
    import csv
    # data
    # group = array([[1.0, 1.1], [1.0, 1.0], [0, 0], [0, 0.1]])
    # labels = ['A', 'A', 'B', 'B']

    # Read the dataset from a file
    f = open('./housing.csv')
    """
    In MacOS and Linux, set f = open('.\\dataset\\housing.csv')
    """
    csv_f = csv.reader(f)

    print(type(csv_f))
    labels = list()
    for row in csv_f:
        group = row[:len(row)-1]
        labels.append(row[-1])
    #group = array(csv_f[:len(csv_f)-1])
    group = np.array(group)
    #labels = row[-1]
    print(group[:10])
    print(labels[:10])
    #lines = text_file.readlines()
    #print(lines)
    #print(len(lines))
    #text_file.close()
    # Preprocessing
    # predict the class of a record [0,0] based on its 3-nearest
    # neighbours in group (whose labels are known).
    #result = classify0([0.1, 0], group, labels, 3)
    #print(result)
    # done!
    print('Done!')


if __name__ == '__main__':
    main()